@use './breakpoints' as *;

/// creates a media query with the given breakpoint value
/// @param {string} $breakpoint - breakpoint name 
/// @group mixins
@mixin mq($breakpoint){
  @if map-has-key($breakpoints, $breakpoint){
    $value: map-get($breakpoints, $breakpoint);
    @media (min-width: $value){
      @content;
    }
  }
  @else{
    @error 'breakpoint #{$breakpoint} does not exist in $breakpoints map';
  }
}

/// creates a media query with the given max-width value  
/// @param {string} $breakpoint - breakpoint name
/// 
/// @example
/// .container{
///  @include mq-max('md'){
///   max-width: 100%;
/// }
/// 
///  
/// @group mixins
@mixin mq-max($breakpoint){
  @if map-has-key($breakpoints, $breakpoint){
    $value: map-get($breakpoints, $breakpoint);
    @media (max-width: $value){
      @content;
    }
  }
  @else{
    @error 'breakpoint #{$breakpoint} does not exist in $breakpoints map';
  }
}


/// creates a header with the given font-size, font-weight, line-height and color
/// @param {string} $font-size - font-size value of the header
/// @param {number} $font-weight - font-weight value of the header
/// @param {number} $line-height - line-height value of the header
/// @param {color} $color - color value of the header
/// 
/// @example
/// .header-1{
///   @include header(1rem, 700, 1);
/// }
/// 
/// 
/// @group mixins
@mixin heading(
  $font-size,
  $font-weight,
  $line-height,
  $color
  ){
    font-size: $font-size;
    font-weight: $font-weight;
    line-height: $line-height;
    color: $color;
    @content;
  }
  
/// set the font sizes properties for the given sizes 
/// @param {map} $sizes - map of font sizes
/// @output {css variables} --fs-#{$size} - css variable for each font size
/// @group mixins
@mixin set-font-sizes($sizes) {
  @each $size, $value in $sizes {
    --fs-#{$size}: #{$value};
  }
}